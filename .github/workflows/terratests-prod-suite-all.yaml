name: terratests-prod-suite-all

on:
  workflow_dispatch:

jobs:
  setup-tests:
    name: Setup PROD DIGP Tests
    runs-on: ubuntu-latest
    env:
      TF_VAR_equinix_client_id: ${{ secrets.EQUINIX_CLIENT_ID }}
      TF_VAR_equinix_client_secret: ${{ secrets.EQUINIX_CLIENT_SECRET }}
      TF_VAR_azure_client_id: ${{ secrets.AZURE_CLIENT_ID}}
      TF_VAR_azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET}}
      TF_VAR_azure_tenant_id: ${{ secrets.AZURE_TENANT_ID}}
      TF_VAR_azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID}}
      GOOGLE_SERVICE_KEYS: ${{ secrets.GOOGLE_SERVICE_KEYS }}
      TEST_DATA_PROD_PORT_2_ALIBABA_CONNECTION: ${{ secrets.TEST_DATA_PROD_PORT_2_ALIBABA_CONNECTION }}
      TEST_DATA_PROD_PORT_2_AWS_CONNECTION: ${{ secrets.TEST_DATA_PROD_PORT_2_AWS_CONNECTION }}
      TEST_DATA_PROD_PORT_2_AZURE_CONNECTION: ${{ secrets.TEST_DATA_PROD_PORT_2_AZURE_CONNECTION }}
      TEST_DATA_PROD_PORT_2_GOOGLE_CONNECTION: ${{ secrets.TEST_DATA_PROD_PORT_2_GOOGLE_CONNECTION }}
      TEST_DATA_PROD_PORT_2_IBM2_CONNECTION: ${{ secrets.TEST_DATA_PROD_PORT_2_IBM2_CONNECTION }}
      TEST_DATA_PROD_PORT_2_ORACLE_CONNECTION: ${{ secrets.TEST_DATA_PROD_PORT_2_ORACLE_CONNECTION }}
      TEST_DATA_PROD_PORT_2_PORT_CONNECTION: ${{ secrets.TEST_DATA_PROD_PORT_2_PORT_CONNECTION }}
      TEST_DATA_PROD_PORT_2_PRIVATE_SERVICE_PROFILE_CONNECTION: ${{ secrets.TEST_DATA_PROD_PORT_2_PRIVATE_SERVICE_PROFILE_CONNECTION }}
      TEST_DATA_PROD_PORT_2_WAN_CONNECTION: ${{ secrets.TEST_DATA_PROD_PORT_2_WAN_CONNECTION }}
      TEST_DATA_PROD_CLOUD_ROUTER: ${{ secrets.TEST_DATA_PROD_CLOUD_ROUTER }}
      TEST_DATA_PROD_CLOUD_ROUTER_2_AWS_CONNECTION: ${{secrets.TEST_DATA_PROD_CLOUD_ROUTER_2_AWS_CONNECTION}}
      TEST_DATA_PROD_CLOUD_ROUTER_2_AZURE_CONNECTION: ${{secrets.TEST_DATA_PROD_CLOUD_ROUTER_2_AZURE_CONNECTION}}
      TEST_DATA_PROD_CLOUD_ROUTER_2_PORT_ROUTING_PROTOCOL_AND_ROUTE_FILTER_CONNECTION: ${{secrets.TEST_DATA_PROD_CLOUD_ROUTER_2_PORT_ROUTING_PROTOCOL_AND_ROUTE_FILTER_CONNECTION}}
      TEST_DATA_PROD_CLOUD_ROUTER_2_SERVICE_PROFILE_CONNECTION: ${{secrets.TEST_DATA_PROD_CLOUD_ROUTER_2_SERVICE_PROFILE_CONNECTION}}
      TEST_DATA_PROD_CLOUD_ROUTER_2_WAN_CONNECTION: ${{secrets.TEST_DATA_PROD_CLOUD_ROUTER_2_WAN_CONNECTION}}
      TEST_DATA_PROD_CLOUD_ROUTER_2_VIRTUAL_DEVICE_CONNECTION: ${{secrets.TEST_DATA_PROD_CLOUD_ROUTER_2_VIRTUAL_DEVICE_CONNECTION}}
      TEST_DATA_PROD_VIRTUAL_DEVICE_2_WAN_CONNECTION: ${{ secrets.TEST_DATA_PROD_VIRTUAL_DEVICE_2_WAN_CONNECTION }}
      TEST_DATA_PROD_VIRTUAL_DEVICE_2_AZURE_CONNECTION: ${{secrets.TEST_DATA_PROD_VIRTUAL_DEVICE_2_AZURE_CONNECTION}}
      TEST_DATA_PROD_VIRTUAL_DEVICE_2_PORT_CONNECTION: ${{secrets.TEST_DATA_PROD_VIRTUAL_DEVICE_2_PORT_CONNECTION}}
      TEST_DATA_PROD_VIRTUAL_DEVICE_2_AWS_CONNECTION: ${{secrets.TEST_DATA_PROD_VIRTUAL_DEVICE_2_AWS_CONNECTION}}
    outputs:
      message: ${{ steps.slack_message.outputs.message }}

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: './go.mod'
        id: go

      - name: Set up Python3
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Get dependencies
        run: |
              go mod download
              go install github.com/thogarty/go-junit-report/v2@latest
              pip3 install junit2html

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false

      - name: Install jq
        run: | 
              sudo apt-get install jq

      - name: Setup Variables Files
        run: |
          TIMESTAMP=$(date +"%m%d%M%S")
          SUFFIX="_DIGP"
          echo $TEST_DATA_PROD_PORT_2_ALIBABA_CONNECTION >> "./examples/port-2-alibaba-connection/terraform.tfvars.json"
          jq --arg timestamp "$TIMESTAMP" '.connection_name = ($timestamp + "_" + .connection_name)' ./examples/port-2-alibaba-connection/terraform.tfvars.json > ./examples/port-2-alibaba-connection/tmp.test.json && mv ./examples/port-2-alibaba-connection/tmp.test.json ./examples/port-2-alibaba-connection/terraform.tfvars.json
          echo $TEST_DATA_PROD_PORT_2_AWS_CONNECTION >> "./tests/examples-without-external-providers/port-2-aws-connection/terraform.tfvars.json"
          jq --arg timestamp "$TIMESTAMP" '.connection_name = ($timestamp + "_" + .connection_name)' ./tests/examples-without-external-providers/port-2-aws-connection/terraform.tfvars.json > ./tests/examples-without-external-providers/port-2-aws-connection/tmp.test.json && mv ./tests/examples-without-external-providers/port-2-aws-connection/tmp.test.json ./tests/examples-without-external-providers/port-2-aws-connection/terraform.tfvars.json
          echo $TEST_DATA_PROD_PORT_2_AZURE_CONNECTION >> "./examples/port-2-azure-connection/terraform.tfvars.json"
          jq --arg timestamp "$TIMESTAMP" '.connection_name = ($timestamp + "_" + .connection_name)' ./examples/port-2-azure-connection/terraform.tfvars.json > ./examples/port-2-azure-connection/tmp.test.json && mv ./examples/port-2-azure-connection/tmp.test.json ./examples/port-2-azure-connection/terraform.tfvars.json
          echo $GOOGLE_SERVICE_KEYS >> "./examples/port-2-google-connection/keys.json"
          echo $TEST_DATA_PROD_PORT_2_GOOGLE_CONNECTION >> "./examples/port-2-google-connection/terraform.tfvars.json"
          jq --arg timestamp "$TIMESTAMP" '.connection_name = ($timestamp + "_" + .connection_name)' ./examples/port-2-google-connection/terraform.tfvars.json > ./examples/port-2-google-connection/tmp.test.json && mv ./examples/port-2-google-connection/tmp.test.json ./examples/port-2-google-connection/terraform.tfvars.json
          echo $TEST_DATA_PROD_PORT_2_IBM2_CONNECTION >> "./examples/port-2-ibm2-connection/terraform.tfvars.json"
          jq --arg timestamp "$TIMESTAMP$SUFFIX" '.connection_name += "" + $timestamp' ./examples/port-2-ibm2-connection/terraform.tfvars.json > ./examples/port-2-ibm2-connection/tmp.test.json && mv ./examples/port-2-ibm2-connection/tmp.test.json ./examples/port-2-ibm2-connection/terraform.tfvars.json
          echo $TEST_DATA_PROD_PORT_2_ORACLE_CONNECTION >> "./examples/port-2-oracle-connection/terraform.tfvars.json"
          jq --arg timestamp "$TIMESTAMP" '.connection_name = ($timestamp + "_" + .connection_name)' ./examples/port-2-oracle-connection/terraform.tfvars.json > ./examples/port-2-oracle-connection/tmp.test.json && mv ./examples/port-2-oracle-connection/tmp.test.json ./examples/port-2-oracle-connection/terraform.tfvars.json
          echo $TEST_DATA_PROD_PORT_2_PORT_CONNECTION >> "./examples/port-2-port-connection/terraform.tfvars.json"
          jq --arg timestamp "$TIMESTAMP" '.connection_name = ($timestamp + "_" + .connection_name)' ./examples/port-2-port-connection/terraform.tfvars.json > ./examples/port-2-port-connection/tmp.test.json && mv ./examples/port-2-port-connection/tmp.test.json ./examples/port-2-port-connection/terraform.tfvars.json
          echo $TEST_DATA_PROD_PORT_2_PRIVATE_SERVICE_PROFILE_CONNECTION >> "./examples/port-2-private-service-profile-connection/terraform.tfvars.json"
          jq --arg timestamp "$TIMESTAMP" '.connection_name = ($timestamp + "_" + .connection_name)' ./examples/port-2-private-service-profile-connection/terraform.tfvars.json > ./examples/port-2-private-service-profile-connection/tmp.test.json && mv ./examples/port-2-private-service-profile-connection/tmp.test.json ./examples/port-2-private-service-profile-connection/terraform.tfvars.json
          echo $TEST_DATA_PROD_PORT_2_WAN_CONNECTION >> "./tests/examples-without-external-providers/port-2-wan-connection/terraform.tfvars.json"
          jq --arg timestamp "$TIMESTAMP" '.connection_name = ($timestamp + "_" + .connection_name)' ./tests/examples-without-external-providers/port-2-wan-connection/terraform.tfvars.json > ./tests/examples-without-external-providers/port-2-wan-connection/tmp.test.json && mv ./tests/examples-without-external-providers/port-2-wan-connection/tmp.test.json ./tests/examples-without-external-providers/port-2-wan-connection/terraform.tfvars.json
          echo $TEST_DATA_PROD_CLOUD_ROUTER >> "./tests/examples-without-external-providers/cloud-router/terraform.tfvars.json"
          jq --arg timestamp "$TIMESTAMP" '.connection_name = ($timestamp + "_" + .connection_name)' ./tests/examples-without-external-providers/cloud-router/terraform.tfvars.json > ./tests/examples-without-external-providers/cloud-router/tmp.test.json && mv ./tests/examples-without-external-providers/cloud-router/tmp.test.json ./tests/examples-without-external-providers/cloud-router/terraform.tfvars.json
          echo $TEST_DATA_PROD_CLOUD_ROUTER_2_AWS_CONNECTION >> "./tests/examples-without-external-providers/cloud-router-2-aws-connection/terraform.tfvars.json"
          jq --arg timestamp "$TIMESTAMP" '.connection_name = ($timestamp + "_" + .connection_name)' ./tests/examples-without-external-providers/cloud-router-2-aws-connection/terraform.tfvars.json > ./tests/examples-without-external-providers/cloud-router-2-aws-connection/tmp.test.json && mv ./tests/examples-without-external-providers/cloud-router-2-aws-connection/tmp.test.json ./tests/examples-without-external-providers/cloud-router-2-aws-connection/terraform.tfvars.json
          echo $TEST_DATA_PROD_CLOUD_ROUTER_2_AZURE_CONNECTION >> "./examples/cloud-router-2-azure-connection/terraform.tfvars.json"
          jq --arg timestamp "$TIMESTAMP" '.connection_name = ($timestamp + "_" + .connection_name)' ./examples/cloud-router-2-azure-connection/terraform.tfvars.json > ./examples/cloud-router-2-azure-connection/tmp.test.json && mv ./examples/cloud-router-2-azure-connection/tmp.test.json ./examples/cloud-router-2-azure-connection/terraform.tfvars.json
          echo $TEST_DATA_PROD_CLOUD_ROUTER_2_PORT_ROUTING_PROTOCOL_AND_ROUTE_FILTER_CONNECTION >> "./tests/examples-without-external-providers/cloud-router-2-port-connection-with-routing-protocols-and-route-filters/terraform.tfvars.json"
          jq --arg timestamp "$TIMESTAMP" '.connection_name = ($timestamp + "_" + .connection_name)' ./tests/examples-without-external-providers/cloud-router-2-port-routing-protocol-connection/terraform.tfvars.json > ./tests/examples-without-external-providers/cloud-router-2-port-routing-protocol-connection/tmp.test.json && mv ./tests/examples-without-external-providers/cloud-router-2-port-routing-protocol-connection/tmp.test.json ./tests/examples-without-external-providers/cloud-router-2-port-routing-protocol-connection/terraform.tfvars.json
          echo $TEST_DATA_PROD_CLOUD_ROUTER_2_SERVICE_PROFILE_CONNECTION >> "./examples/cloud-router-2-service-profile-connection/terraform.tfvars.json"
          jq --arg timestamp "$TIMESTAMP" '.connection_name = ($timestamp + "_" + .connection_name)' ./examples/cloud-router-2-service-profile-connection/terraform.tfvars.json > ./examples/cloud-router-2-service-profile-connection/tmp.test.json && mv ./examples/cloud-router-2-service-profile-connection/tmp.test.json ./examples/cloud-router-2-service-profile-connection/terraform.tfvars.json
          echo $TEST_DATA_PROD_CLOUD_ROUTER_2_WAN_CONNECTION >> "./examples/cloud-router-2-wan-connection/terraform.tfvars.json"
          jq --arg timestamp "$TIMESTAMP" '.connection_name = ($timestamp + "_" + .connection_name)' ./examples/cloud-router-2-wan-connection/terraform.tfvars.json > ./examples/cloud-router-2-wan-connection/tmp.test.json && mv ./examples/cloud-router-2-wan-connection/tmp.test.json ./examples/cloud-router-2-wan-connection/terraform.tfvars.json
          echo $TEST_DATA_PROD_VIRTUAL_DEVICE_2_WAN_CONNECTION >> "./tests/examples-without-external-providers/virtual-device-2-wan-connection/terraform.tfvars.json"
          jq --arg timestamp "$TIMESTAMP" '.connection_name = ($timestamp + "_" + .connection_name)' ./tests/examples-without-external-providers/virtual-device-2-wan-connection/terraform.tfvars.json > ./tests/examples-without-external-providers/virtual-device-2-wan-connection/tmp.test.json && mv ./tests/examples-without-external-providers/virtual-device-2-wan-connection/tmp.test.json ./tests/examples-without-external-providers/virtual-device-2-wan-connection/terraform.tfvars.json
          echo $TEST_DATA_PROD_VIRTUAL_DEVICE_2_AZURE_CONNECTION >> "./examples/virtual-device-2-azure-connection-without-vd-creation/terraform.tfvars.json"
          jq --arg timestamp "$TIMESTAMP" '.connection_name = ($timestamp + "_" + .connection_name)' ./examples/virtual-device-2-azure-connection-without-vd-creation/terraform.tfvars.json > ./examples/virtual-device-2-azure-connection-without-vd-creation/tmp.test.json && mv ./examples/virtual-device-2-azure-connection-without-vd-creation/tmp.test.json ./examples/virtual-device-2-azure-connection-without-vd-creation/terraform.tfvars.json
          echo $TEST_DATA_PROD_VIRTUAL_DEVICE_2_PORT_CONNECTION >> "./tests/examples-without-external-providers/virtual-device-2-port-connection/terraform.tfvars.json"
          jq --arg timestamp "$TIMESTAMP" '.connection_name = ($timestamp + "_" + .connection_name)' ./tests/examples-without-external-providers/virtual-device-2-port-connection/terraform.tfvars.json > ./tests/examples-without-external-providers/virtual-device-2-port-connection/tmp.test.json && mv ./tests/examples-without-external-providers/virtual-device-2-port-connection/tmp.test.json ./tests/examples-without-external-providers/virtual-device-2-port-connection/terraform.tfvars.json
          echo $TEST_DATA_PROD_CLOUD_ROUTER_2_VIRTUAL_DEVICE_CONNECTION >> "./examples/cloud-router-2-virtual-device-connection/terraform.tfvars.json"
          jq --arg timestamp "$TIMESTAMP" '.connection_name = ($timestamp + "_" + .connection_name)' ./examples/cloud-router-2-virtual-device-connection/terraform.tfvars.json > ./examples/cloud-router-2-virtual-device-connection/tmp.test.json && mv ./examples/cloud-router-2-virtual-device-connection/tmp.test.json ./examples/cloud-router-2-virtual-device-connection/terraform.tfvars.json
          echo $TEST_DATA_PROD_VIRTUAL_DEVICE_2_AWS_CONNECTION >> "./tests/examples-without-external-providers/virtual-device-2-aws-connection/terraform.tfvars.json"
          jq --arg timestamp "$TIMESTAMP" '.connection_name = ($timestamp + "_" + .connection_name)' ./tests/examples-without-external-providers/virtual-device-2-aws-connection/terraform.tfvars.json > ./tests/examples-without-external-providers/virtual-device-2-aws-connection/tmp.test.json && mv ./tests/examples-without-external-providers/virtual-device-2-aws-connection/tmp.test.json ./tests/examples-without-external-providers/virtual-device-2-aws-connection/terraform.tfvars.json

      - name: Run Go Tests
        run:
          go test ./tests/prod -json -v -count 1 -parallel 8 -run "(DIGP)" -timeout 180m | tee prod_suite_all.log

      - name: Create HTML Testing Report
        run: |
          go-junit-report -parser gojson -in prod_suite_all.log  > prod_suite_all.xml && python3 -m junit2htmlreport prod_suite_all.xml prod_suite_all.html

      - name: Prepare slack message
        id: slack_message
        if: always()
        shell: bash
        run: |
          xml_file=$(find . -type f -name '*prod_suite.xml' | head -n 1)
          
          if [[ -z "$xml_file" ]]; then
            echo "No file ending with prod_suite.xml found."
          exit 1
          fi
          
          tests=$(xmllint --xpath 'string(//testsuite/@tests)' "$xml_file")
          errors=$(xmllint --xpath 'string(//testsuite/@failures)' "$xml_file")
          message="*Results:* $((tests-errors)) Passed, $errors Errors"
              echo "message<<EOF" >> $GITHUB_OUTPUT
              echo "$message" >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT
              fi

      - name: Upload HTML Testing Report
        uses: actions/upload-artifact@v4
        with:
          name: Prod Suite ALL Terraform Modules Testing Report
          path: prod_suite_all.html
          compression-level: 0

      - name: Check if Tests are passed
        run: sh scripts/check_tests.sh *suite_all.log

      - name: Notify Slack
        uses: slackapi/slack-github-action@v2
        if: always()
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_ACCESS_TOKEN }}
          payload: |
            channel: digin-panthers-gha-automation

            attachments:
              - color: ${{ job.status == 'success' && 'good' || job.status == 'failure' && 'danger' || 'warning' }}
                text: |
                    *Repository:* <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.repository }}>
                    *Workflow:* ${{ github.workflow }}           
                    *Status:* ${{ job.status }}
                    *Results:* ${{ steps.slack_message.outputs.message }}
                    *Triggered by:* <@${{ github.actor }}>        
